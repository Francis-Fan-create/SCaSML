Traceback (most recent call last):
  File "c:\Users\86189\ScaML-Experiment\results\Explicit_Solution_Example\experiment_run.py", line 49, in <module>
    data=equation.generate_data()
  File "c:\Users\86189\ScaML-Experiment\results\Explicit_Solution_Example\..\..\equations\equations.py", line 134, in generate_data
    data = dde.data.TimePDE( #time dependent PDE
  File "C:\Users\86189\Anaconda3\lib\site-packages\deepxde\data\pde.py", line 328, in __init__
    super().__init__(
  File "C:\Users\86189\Anaconda3\lib\site-packages\deepxde\data\pde.py", line 127, in __init__
    self.train_next_batch()
  File "C:\Users\86189\Anaconda3\lib\site-packages\deepxde\utils\internal.py", line 38, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\86189\Anaconda3\lib\site-packages\deepxde\data\pde.py", line 198, in train_next_batch
    self.train_y = self.soln(self.train_x) if self.soln else None
  File "c:\Users\86189\ScaML-Experiment\results\Explicit_Solution_Example\..\..\equations\equations.py", line 119, in exact_solution
    sum_x = torch.sum(x, axis=1)
TypeError: sum() received an invalid combination of arguments - got (numpy.ndarray, axis=int), but expected one of:
 * (Tensor input, *, torch.dtype dtype)
 * (Tensor input, tuple of ints dim, bool keepdim, *, torch.dtype dtype, Tensor out)
 * (Tensor input, tuple of names dim, bool keepdim, *, torch.dtype dtype, Tensor out)