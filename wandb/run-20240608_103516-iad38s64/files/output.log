Compiling model...
'compile' took 0.000984 s
Training model...
Traceback (most recent call last):
  File "c:\Users\86189\ScaML-Experiment\results\Explicit_Solution_Example\experiment_run.py", line 56, in <module>
    trained_net=optimizer.train("results/Explicit_Solution_Example/model.pth",cycle=40,adam_every=500,lbfgs_every=10,metrics=["l2 relative error","mse"]).net
  File "c:\Users\86189\ScaML-Experiment\results\Explicit_Solution_Example\..\..\optimizers\Adam_LBFGS.py", line 41, in train
    self.model.train(iterations=adam_every, display_every=10)
  File "C:\Users\86189\Anaconda3\lib\site-packages\deepxde\utils\internal.py", line 22, in wrapper
    result = f(*args, **kwargs)
  File "C:\Users\86189\Anaconda3\lib\site-packages\deepxde\model.py", line 636, in train
    self._test()
  File "C:\Users\86189\Anaconda3\lib\site-packages\deepxde\model.py", line 825, in _test
    ) = self._outputs_losses(
  File "C:\Users\86189\Anaconda3\lib\site-packages\deepxde\model.py", line 546, in _outputs_losses
    outs = outputs_losses(inputs, targets, auxiliary_vars)
  File "C:\Users\86189\Anaconda3\lib\site-packages\deepxde\model.py", line 320, in outputs_losses_train
    return outputs_losses(
  File "C:\Users\86189\Anaconda3\lib\site-packages\deepxde\model.py", line 302, in outputs_losses
    outputs_ = self.net(inputs)
  File "C:\Users\86189\Anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\86189\Anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "c:\Users\86189\ScaML-Experiment\results\Explicit_Solution_Example\..\..\models\FNN.py", line 20, in forward
    result=eq.terminal_condition(x_t,self.net(x_t))
  File "c:\Users\86189\ScaML-Experiment\results\Explicit_Solution_Example\..\..\equations\equations.py", line 58, in terminal_condition
    return (x_t[:,-1] - self.T)*u+self.terminal_constraint(x_t) #need to be enforced on network class
  File "c:\Users\86189\ScaML-Experiment\results\Explicit_Solution_Example\..\..\equations\equations.py", line 102, in terminal_constraint
    result=np.exp(x_t[:,-1] + np.sum(x_t[0:self.n_input],axis=1)) / (1 + np.exp(x_t[:,-1] + np.sum(x_t[0:self.n_input],axis=1)))
  File "<__array_function__ internals>", line 180, in sum
  File "C:\Users\86189\Anaconda3\lib\site-packages\numpy\core\fromnumeric.py", line 2296, in sum
    return _wrapreduction(a, np.add, 'sum', axis, dtype, out, keepdims=keepdims,
  File "C:\Users\86189\Anaconda3\lib\site-packages\numpy\core\fromnumeric.py", line 84, in _wrapreduction
    return reduction(axis=axis, out=out, **passkwargs)
TypeError: sum() received an invalid combination of arguments - got (axis=int, out=NoneType, ), but expected one of:
 * (*, torch.dtype dtype)
      didn't match because some of the keywords were incorrect: axis, out
 * (tuple of ints dim, bool keepdim, *, torch.dtype dtype)
 * (tuple of names dim, bool keepdim, *, torch.dtype dtype)